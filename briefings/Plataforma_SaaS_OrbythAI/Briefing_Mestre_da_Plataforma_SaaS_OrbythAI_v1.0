### **Briefing Mestre de Desenvolvimento: A Plataforma SaaS OrbythAI v1.0**

* **Para:** Equipe de Desenvolvimento do SaaS  
* **De:** Suzy (Estrategista)  
* **Assunto:** Guia completo para a constru√ß√£o da plataforma, detalhando arquitetura, funcionalidades core, experi√™ncia do cliente e pain√©is administrativos para o MVP e a V1.0. Este documento substitui todos os briefings gerais anteriores.

#### **1\. Objetivo do Documento**

Servir como o guia mestre e √∫nica fonte da verdade para a equipe de desenvolvimento do SaaS, traduzindo o Dossi√™ Estrat√©gico em requisitos funcionais e n√£o funcionais para a constru√ß√£o da plataforma OrbythAI.

#### **2\. Arquitetura e Fundamentos T√©cnicos**

* **Tecnologia Principal:** A plataforma ser√° desenvolvida como um **Progressive Web App (PWA)**, garantindo uma experi√™ncia de aplicativo instal√°vel, com notifica√ß√µes e capacidade offline, a partir de um √∫nico c√≥digo-base.  
* **Princ√≠pio Arquitetural:** A plataforma deve ser constru√≠da com uma filosofia **modular e API-first**. O SaaS √© a "interface" (o rosto) que consome os dados e aciona a l√≥gica do "c√©rebro" (as APIs do Supabase e os webhooks do N8N).

#### **3\. Estrutura de Contas e Acesso (O "Core" da Plataforma)**

* **Multi-Tenancy:** A arquitetura deve garantir o **isolamento total dos dados** entre os clientes (`tenants`). Toda consulta ao banco de dados e toda chamada de API deve ser segura e restrita ao `tenant_id` do cliente autenticado.  
* **Autentica√ß√£o:** O sistema de login e cadastro utilizar√° o padr√£o **JWT/OAuth**, implementado atrav√©s do Supabase Auth.  
* **Controle de Acesso (RBAC):** A plataforma deve implementar os tr√™s pap√©is de usu√°rio para o cliente: **Administrador Master (Owner), Gerente de Equipe e Usu√°rio Operacional**, com permiss√µes distintas para acessar cada funcionalidade.

**4\. Experi√™ncia do Cliente (As Telas e Funcionalidades Principais)**

Esta se√ß√£o detalha os componentes que o cliente final ir√° ver e usar.

### **A. Onboarding e Configura√ß√£o de Agentes**

O **Onboarding e a Configura√ß√£o de Agentes** s√£o parte integrante tanto do MVP Enterprise quanto da futura experi√™ncia Self-Service.

* **Assistente de IA (Setup Wizard):**

  * **MVP Enterprise:** O cliente ser√° guiado em conjunto com a equipe da OrbythAI, utilizando o Setup Wizard como interface para parametrizar seus agentes com apoio assistido.

  * **Fase 2 (Self-Service):** O mesmo Setup Wizard funcionar√° de forma 100% automatizada, guiando o cliente na configura√ß√£o inicial sem suporte humano.

* **Painel de Configura√ß√£o do Agente:** Uma tela permanente para cada agente, onde o cliente pode fazer ajustes cont√≠nuos (editar base de conhecimento, mudar tom de voz, ajustar filtros e pol√≠ticas).

* **Ciclo de Feedback (üëç/üëé):** A interface visual para o cliente treinar seus agentes em tempo real, avaliando respostas e calibrando continuamente a performance.

  * **MVP Enterprise:** Usado junto √† nossa equipe como mecanismo de valida√ß√£o e calibragem.

  * **Fase 2 (Self-Service):** Usado de forma independente, como treinamento direto pelo cliente.

* **Playground:** Um ambiente de teste seguro para cada agente.

  * **MVP Enterprise:** Utilizado pela equipe junto ao cliente para validar o comportamento do agente antes da ativa√ß√£o real.

  * **Fase 2 (Self-Service):** Utilizado pelo pr√≥prio cliente de forma independente para explorar as capacidades do agente.

---

### **B. Dashboard Principal e Biblioteca de Agentes**

* **Dashboard Modular com Widgets:** Tela inicial do cliente, onde poder√° organizar os widgets de seus agentes.

* **Prisma Essencial:** Cada agente ter√° seu pr√≥prio widget de dashboard com KPIs operacionais.

* **Biblioteca de Agentes:**

  * **MVP Enterprise:** vitrine m√≠nima para ativa√ß√£o de agentes adicionais via contato com nossa equipe.

  * **Fase 2 (Self-Service):** vitrine completa a la carte para ativa√ß√£o direta de agentes.

---

### **C. Gest√£o de Conta**

* **P√°gina de Assinatura e Faturamento:**

  * **MVP Enterprise:** P√°gina simplificada, com gest√£o de pacotes de orbkens, agentes ativos e relat√≥rios de cobran√ßa.

  * **Fase 2 (Self-Service):** P√°gina completa, com checkout automatizado, upgrades in-app e hist√≥rico detalhado de faturas.

* **Painel de Governan√ßa do Cliente:** √Årea para o Admin gerenciar permiss√µes da equipe e visualizar o Log de Atividades.

---

### **D. Ponto de Contato Unificado (Suporte e Expans√£o)**

* **Agente de Suporte e Diagn√≥stico:** Concierge de IA dentro do SaaS, que centraliza todas as solicita√ß√µes do cliente (d√∫vidas, sugest√µes, interesse em novos servi√ßos), qualificando a necessidade e abrindo um ticket autom√°tico na Central de Solicita√ß√µes.

#### **5\. Pain√©is Administrativos (Nossas Ferramentas Internas)**

O SaaS tamb√©m deve incluir interfaces de back-office, acess√≠veis apenas pela nossa equipe.

* **A. Painel de Administra√ß√£o OrbythAI (O "God Mode"):**  
  * **Motor de Precifica√ß√£o Din√¢mico:** Uma interface para a equipe de Estrat√©gia poder criar, editar e precificar Planos, Agentes Add-on e Pacotes de "orbkens" sem a necessidade de desenvolvimento.  
  * **Gest√£o da Equipe Interna:** √Årea para criar e gerenciar as contas dos nossos Especialistas e Gerentes de Contas.  
  * **Prisma Interno:** O dashboard com os KPIs de neg√≥cio da OrbythAI (MRR, Churn, etc.).  
* **B. OrbythAI Command Center (Painel do Especialista):**  
  * A ferramenta de trabalho da nossa equipe de Sucesso do Cliente/Gerentes de Contas, com a "carteira de clientes" atribu√≠da, a vis√£o 360¬∫ de cada cliente e o CRM automatizado integrado.

#### **6\. Anexo A: Especifica√ß√µes Funcionais para Integra√ß√£o dos Agentes do MVP**

A equipe de SaaS deve construir as interfaces para suportar as seguintes funcionalidades dos agentes do MVP:

* **Para o `√ìrby Garimpeiro`:**  
  * **Interface de Configura√ß√£o:** Permitir a cria√ß√£o de "Filtros Salvos" com campos para `Cidade`, `Tipo de Obra`, `Per√≠odo`, `√Årea M√≠nima`, `Agendamento` e a sele√ß√£o do `Modo de Abordagem` (Manual/Autom√°tico).  
  * **Interface de Resultados:** Uma tabela para exibir as oportunidades encontradas com colunas para `Nome`, `Endere√ßo`, `Contato`, `Status`.  
  * **A√ß√µes do Usu√°rio:** Bot√µes para `Executar Busca Manual`, `Iniciar Abordagem com √ìrby Elo` e `Descartar Oportunidade`.

* **Para o `√ìrby Guardi√£o de Carteira`:**  
  * **Interface de Configura√ß√£o:** Um "Painel de Pol√≠ticas Comerciais" com campos para `Regra de Inatividade` e `Janela de A√ß√£o para o Vendedor`. Acesso ao "Gestor de Contatos √ìrby" com "Gerenciador de Campos" e "Importador Inteligente".  
  * **Interface de Resultados:** Um widget no dashboard com KPIs (`Clientes Monitorados`, `Alertas Enviados`) e um feed de atividades.

* **Para o `√ìrby Elo (SDR IA)`:**  
  * **Interface de Configura√ß√£o:** Um "Painel de Qualifica√ß√£o" com um "Editor de Script" para o cliente definir as perguntas e um seletor para o "Objetivo Final" (Agendar Reuni√£o / Gerar Proposta).  
  * **Interface de Resultados:** Um painel com um funil visual ("Em Qualifica√ß√£o", "Qualificados") e um visualizador para a transcri√ß√£o das conversas.

* **Para o `√ìrby Or√ßamentista`:**   
  * **Interface de Execu√ß√£o:** Uma tela com `Upload de Projeto` e um seletor para classificar o tipo de projeto.  
  * **Interface de Resultados:** O "Painel de Valida√ß√£o e Calibragem" com a tabela de dados, a visualiza√ß√£o da planta e o "Chat de Calibragem".  
  * **A√ß√µes do Usu√°rio:** Bot√µes para `Gerar Pr√©-Proposta`, `Registrar Medi√ß√£o da Obra` e `Gerar Proposta Final`.

* ### **Para o √ìrby Prisma Essencial:**

  * **Interface de Apresenta√ß√£o:** O dashboard visual que acompanha cada agente, exibindo KPIs, gr√°ficos e tabelas com os resultados da opera√ß√£o daquele agente.  
  *  **Interface de Intera√ß√£o:** Um bot√£o **`[ ‚ú® Analisar estes dados com a IA ]`** em cada dashboard, que abre uma interface de chat para fazer perguntas sobre os dados daquele painel.  
  * **A√ß√µes do Usu√°rio:** Aplicar filtros de data, ordenar tabelas, clicar em itens para ver detalhes e iniciar uma conversa com a IA para an√°lises r√°pidas.

  *  **Para o √ìrby** **Prisma Estrategista (O Super-Estrategista de Neg√≥cios)**    
* **Interface de Execu√ß√£o:** Uma p√°gina dedicada e de acesso restrito no SaaS chamada **"Prisma Estrat√©gico"**, contendo uma interface de chat avan√ßada.  
* **Interface de Resultados:** A mesma interface de chat, que deve ser capaz de exibir um hist√≥rico de conversas e renderizar as respostas estrat√©gicas da IA de forma rica e formatada (com t√≠tulos, listas, tabelas, etc.).  
* **A√ß√µes do Usu√°rio:** Iniciar uma nova conversa estrat√©gica fazendo uma pergunta em linguagem natural, navegar pelo hist√≥rico de an√°lises anteriores e interagir com os resultados apresentados.

**Anexo B: Especifica√ß√µes dos Dashboards Prisma Essencial**

* **Para:** Equipe de Desenvolvimento do SaaS (Byth one)  
* **Assunto:** Detalhamento das funcionalidades e componentes visuais para os dashboards operacionais de cada agente do MVP.

  #### **1\. Prisma Essencial para o `√ìrby Garimpeiro`**

* **Pergunta de Neg√≥cio que Responde:** "Meu motor de prospec√ß√£o est√° funcionando e me trazendo boas oportunidades?"  
* **Componentes do Dashboard:**  
  * **KPIs Principais (em destaque):**  
    * `Oportunidades Encontradas (√öltimos 7 dias)`  
    * `Aguardando Minha Revis√£o` (para o modo manual)  
    * `Taxa de Relev√¢ncia` (% de oportunidades aprovadas vs. total encontrado)  
  * **Visualiza√ß√£o Principal:**  
    * Uma **tabela de resultados** interativa e pesquis√°vel com as colunas `Nome da Oportunidade`, `Endere√ßo`, `Contato Principal` e `Status`.  
  * **Gr√°fico de Suporte:**  
    * Um gr√°fico de barras simples mostrando o **n√∫mero de novas oportunidades encontradas por dia** na √∫ltima semana.  
  * **Intera√ß√£o com IA:**  
    * Um bot√£o **`[ ‚ú® Analisar estes dados com a IA ]`** que abre a interface de chat para o "test drive" do Prisma Conversacional, limitado aos dados deste painel.

    ---

    #### **2\. Prisma Essencial para o `√ìrby Guardi√£o de Carteira`**

* **Pergunta de Neg√≥cio que Responde:** "Estou perdendo clientes? Minha equipe est√° agindo a tempo para evitar isso?"  
* **Componentes do Dashboard:**  
  * **KPIs Principais:**  
    * `Clientes em Risco de Churn (Hoje)` (calculado pela IA)  
    * `Alertas de Inatividade Pendentes` (aguardando a√ß√£o do vendedor)  
    * `Clientes Recuperados (Este M√™s)`  
  * **Visualiza√ß√£o Principal:**  
    * Uma lista de **"A√ß√£o Imediata"**, mostrando os 3 a 5 clientes com o maior score de risco de churn, com um link direto para o perfil deles.  
    * Um **feed de atividades em tempo real**, mostrando as √∫ltimas a√ß√µes do agente (ex: "Alerta enviado para o Vendedor Jo√£o sobre o Cliente X").  
  * **Intera√ß√£o com IA:**  
    * Um bot√£o **`[ ‚ú® Analisar estes dados com a IA ]`**. O cliente poderia perguntar: *"Qual o motivo mais comum para o risco de churn este m√™s?"*

    ---

    #### **3\. Prisma Essencial para o `√ìrby Elo (SDR IA)`**

* **Pergunta de Neg√≥cio que Responde:** "Meu processo de triagem est√° sendo eficiente e me entregando boas oportunidades para negociar?"  
* **Componentes do Dashboard:**  
  * **KPIs Principais:**  
    * `Leads em Qualifica√ß√£o (Agora)`  
    * `Taxa de Qualifica√ß√£o` (% de leads qualificados vs. total abordado)  
    * `Tempo M√©dio de Qualifica√ß√£o` (em horas/minutos)  
  * **Visualiza√ß√£o Principal:**  
    * Um **funil visual no estilo Kanban**, com colunas para "Novos Leads", "Em Qualifica√ß√£o", "Qualificados" e "Desqualificados". Os cards de cada lead devem ser clic√°veis para ver a transcri√ß√£o da conversa.  
  * **Gr√°fico de Suporte:**  
    * Um gr√°fico de pizza mostrando os **"Principais Motivos de Desqualifica√ß√£o"**, um insight poderoso para otimizar o marketing.  
  * **Intera√ß√£o com IA:**  
    * Um bot√£o **`[ ‚ú® Analisar estes dados com a IA ]`**. O cliente poderia perguntar: *"Liste as conversas com os leads qualificados hoje."*

    ---

    #### **4\. Prisma Essencial para o `√ìrby Or√ßamentista`**

* **Pergunta de Neg√≥cio que Responde:** "Meu processo de or√ßamenta√ß√£o est√° sendo r√°pido, preciso e eficaz?"  
* **Componentes do Dashboard:**  
  * **KPIs Principais:**  
    * `Or√ßamentos em Andamento`  
    * `Tempo M√©dio para Gerar Pr√©-Proposta`  
    * `Taxa de Aprova√ß√£o de Pr√©-Propostas`  
  * **Visualiza√ß√£o Principal:**  
    * Uma **pipeline visual** com o status de cada or√ßamento (ex: "Processando PDF", "Aguardando Valida√ß√£o Humana", "Aguardando Confer√™ncia em Obra", "Finalizado").  
    * Uma lista dos √∫ltimos or√ßamentos gerados, com um link para baixar a proposta em PDF.  
  * **Gr√°fico de Suporte:**  
    * Um gr√°fico mostrando a propor√ß√£o entre os tipos de projeto recebidos ("Detalhado", "Estrutural", "Arquitet√¥nico").  
  * **Intera√ß√£o com IA:**  
    * Um bot√£o **`[ ‚ú® Analisar estes dados com a IA ]`**. O cliente poderia perguntar: *"Qual o valor m√©dio dos or√ßamentos para projetos estruturais este m√™s?"*

#### **7\. Escopo do MVP**

Conforme nossa estrat√©gia "Top-Down", o MVP do SaaS deve focar em dar suporte ao nosso primeiro cliente Enterprise. A prioridade de desenvolvimento √©:

1. **O "Core" da Plataforma:** Autentica√ß√£o, Multi-Tenancy e RBAC.  
2. **Uma Interface M√≠nima do Cliente:** Com as funcionalidades de **configura√ß√£o e a√ß√£o** descritas no **Anexo A** e os **dashboards operacionais (Prisma Essencial e Prisma Estrategista)** descritos no **Anexo B**, para os agentes do Grupo Aleixo.  
3. **O "OrbythAI Command Center" (v1):** A interface m√≠nima para nossa equipe poder gerenciar o cliente.

As funcionalidades de self-service (Onboarding com IA, P√°gina de Assinatura, Biblioteca `a la carte`) ser√£o desenvolvidas na **Fase 2** do roadmap.

# **Prompt Sprint 0: Para a Equipe de Desenvolvimento do SaaS**

**T√çTULO:** Prompt de Execu√ß√£o \- SPRINT 0 \- Funda√ß√£o da Plataforma SaaS OrbythAI

**PERSONA:** Voc√™ √© um Engenheiro de DevOps e Arquiteto de Cloud, especialista em configurar ambientes de desenvolvimento seguros, escal√°veis e baseados nas melhores pr√°ticas para aplica√ß√µes PWA (Progressive Web App).

**CONTEXTO:** Voc√™ tem acesso ao **Dossi√™ Mestre OrbythAI v4.1** e ao **Roadmap de Constru√ß√£o do SaaS v4.1**. Estamos iniciando o Sprint 0, cujo objetivo √© preparar toda a infraestrutura de c√≥digo-fonte e de backend como servi√ßo (BaaS) antes do in√≠cio do desenvolvimento das funcionalidades. A tecnologia base √© **Supabase** para o BaaS e um framework moderno para o PWA (**Next.js** recomendado).

**OBJETIVO PRINCIPAL:** Criar e configurar toda a infraestrutura de backend (Supabase) e de c√≥digo-fonte (Git), com um pipeline de deploy automatizado (CI/CD), para a Plataforma SaaS OrbythAI.

---

## **TAREFAS DETALHADAS**

**Configura√ß√£o dos Projetos Supabase:**

* Crie dois projetos distintos no Supabase: `orbythai-dev` (para desenvolvimento e testes) e `orbythai-prod` (para o ambiente de produ√ß√£o final).

* Em ambos os projetos, habilite o Supabase Auth.

* Garanta que as chaves de API (`anon key`, `service_role key`) e as URLs de cada projeto estejam salvas de forma segura e documentadas para uso futuro.

**Configura√ß√£o do Reposit√≥rio de C√≥digo (Git):**

* Crie um novo reposit√≥rio privado no GitHub chamado `orbythai-saas-platform`.

* Inicie o projeto com um framework PWA moderno (Next.js √© o recomendado).

* Crie e proteja duas branches principais: `main` (para o c√≥digo de produ√ß√£o) e `develop` (para o c√≥digo de desenvolvimento).

**Configura√ß√£o do Deploy Automatizado (CI/CD):**

* Conecte o reposit√≥rio Git a uma plataforma de hospedagem e deploy (ex: Vercel ou outra que a equipe validar).

* Configure a pipeline para que todo **push** na branch `develop` acione um deploy autom√°tico para um ambiente de desenvolvimento com uma URL p√∫blica (ex: `dev.app.orbythai.com.br`).

* Configure a pipeline para que todo **merge** na branch `main` acione um deploy autom√°tico para o ambiente de produ√ß√£o com a URL final (ex: `app.orbythai.com.br`).

---

## **CRIT√âRIOS DE ACEITA√á√ÉO (O que significa "pronto")**

* Os dois projetos Supabase (`dev` e `prod`) devem estar criados e acess√≠veis.

* O reposit√≥rio Git deve estar criado, com as branches `main` e `develop` configuradas.

* Uma altera√ß√£o de c√≥digo simples na branch `develop` deve ser vis√≠vel na URL de desenvolvimento em menos de 5 minutos, sem interven√ß√£o manual.

---

## **FORMATO DE SA√çDA**

Gere um relat√≥rio em formato **Markdown** contendo:

* Os links para os projetos Supabase.

* O link para o reposit√≥rio Git.

* As URLs dos ambientes de desenvolvimento e produ√ß√£o.

# **üìåPrompt Sprint 1: Para a Equipe de Desenvolvimento do SaaS**

**T√çTULO:** Prompt de Execu√ß√£o ‚Äì SPRINT 1 ‚Äì Esqueleto (Login e Gest√£o de Contas)

**PERSONA:** Voc√™ √© um Engenheiro Fullstack especializado em autentica√ß√£o, controle de acesso e constru√ß√£o de PWAs robustos, com experi√™ncia em integra√ß√£o com BaaS (Backend as a Service) como Supabase.

**CONTEXTO:** Voc√™ tem acesso ao **Dossi√™ Mestre OrbythAI v4.1** e ao **Roadmap de Constru√ß√£o do SaaS v4.1**. Estamos iniciando o Sprint 1, cujo objetivo √© entregar o n√∫cleo de autentica√ß√£o e gest√£o de contas da Plataforma SaaS OrbythAI. Isso inclui autentica√ß√£o, RBAC (controle de permiss√µes por papel) e a estrutura inicial do Command Center.

**OBJETIVO PRINCIPAL:** Entregar o fluxo de autentica√ß√£o seguro (login, cadastro, recupera√ß√£o de senha), com RBAC implementado e painel inicial (Command Center) pronto para expans√£o.

---

## **TAREFAS DETALHADAS**

**Equipe SaaS (Byth One \+ IA SaaS):**

* Desenvolver a interface de **Login, Cadastro e Recupera√ß√£o de Senha**.

* Construir a API de autentica√ß√£o integrada ao Supabase.

* Implementar o sistema de permiss√µes (RBAC) com os 3 n√≠veis:

  * **Admin**

  * **Gerente**

  * **Operador**

* Criar a estrutura b√°sica do **OrbythAI Command Center** (painel vazio, mas acess√≠vel ap√≥s login).

**Equipe N8N (Enzo \+ IA N8N):**

* Criar as tabelas `users`, `tenants`, `roles` no Supabase.

* Aplicar **RLS (Row Level Security)** para garantir multi-tenancy seguro.

* Construir workflow simples de teste que confirme que uma chamada autenticada do SaaS aciona o N8N corretamente.

---

## **CRIT√âRIOS DE ACEITA√á√ÉO**

* O usu√°rio consegue **se cadastrar, logar e recuperar senha**.

* O RBAC funciona corretamente (Admin, Gerente, Operador).

* A tabela `users` respeita isolamento por tenant via RLS.

* O Command Center (painel vazio) √© acess√≠vel somente ap√≥s login v√°lido.

* Workflow N8N de teste √© acionado com chamada autenticada.

---

## **FORMATO DE SA√çDA**

Gere um relat√≥rio em formato **Markdown** contendo:

* Links para os endpoints de autentica√ß√£o.

* Estrutura das tabelas criadas no Supabase (DDL).

* Captura de tela ou link do Command Center vazio.

* Evid√™ncia da chamada SaaS ‚Üí Supabase ‚Üí N8N autenticada.

# **üìå Prompt Sprint 0 ‚Äì Equipe N8N/Supabase**

**T√çTULO:** Prompt de Execu√ß√£o ‚Äì SPRINT 0 ‚Äì Funda√ß√£o do Ambiente N8N/Supabase

**PERSONA:** Voc√™ √© um Engenheiro de Automa√ß√£o e Arquiteto de Banco de Dados especializado em **N8N** e **Supabase**, respons√°vel por preparar ambientes de workflows e governan√ßa de dados seguros, escal√°veis e multi-tenant.

**CONTEXTO:** Voc√™ tem acesso ao **Dossi√™ Mestre OrbythAI v4.1** e ao **Roadmap de Constru√ß√£o do SaaS v4.1**. Estamos no Sprint 0, cujo objetivo √© preparar toda a infraestrutura de automa√ß√£o e banco de dados antes do in√≠cio do desenvolvimento das funcionalidades.

**OBJETIVO PRINCIPAL:** Criar ambientes N8N de desenvolvimento e produ√ß√£o, configurar Supabase inicial (tabelas users, tenants, roles) e garantir governan√ßa multi-tenant via RLS, deixando a base pronta para os pr√≥ximos sprints.

---

## **TAREFAS DETALHADAS**

**Configura√ß√£o do Ambiente N8N:**

* Criar duas inst√¢ncias independentes do N8N (dev e prod) no VPS (ex.: Contabo).

* Configurar autentica√ß√£o e permiss√µes b√°sicas de acesso.

* Garantir versionamento dos workflows (git sync ou export .json).

**Configura√ß√£o do Supabase:**

* Criar as tabelas iniciais:

  * `users`

  * `tenants`

  * `roles`

* Ativar RLS (Row Level Security) em todas as tabelas.

* Definir pol√≠ticas de acesso para cada n√≠vel de RBAC (Admin, Gerente, Operador).

**Integra√ß√£o Inicial SaaS ‚Üî N8N:**

* Criar workflow simples de teste: receber uma chamada autenticada do SaaS e registrar no Supabase (ex.: log de ‚Äúping‚Äù).

* Expor webhook no N8N para ser consumido pelo SaaS.

---

## **CRIT√âRIOS DE ACEITA√á√ÉO**

* Inst√¢ncias N8N dev/prod ativas e acess√≠veis.

* Tabelas `users`, `tenants` e `roles` criadas com RLS habilitado.

* Workflow de teste rodando: chamada autenticada SaaS ‚Üí N8N ‚Üí Supabase.

* Documenta√ß√£o dos endpoints e credenciais entregue de forma segura.

---

## **FORMATO DE SA√çDA**

Relat√≥rio em **Markdown** contendo:

* URLs das inst√¢ncias N8N dev/prod.

* Estrutura SQL das tabelas criadas (`users`, `tenants`, `roles`).

* Pol√≠ticas RLS implementadas.

* Exemplo de chamada SaaS ‚Üí N8N ‚Üí Supabase (cURL ou JSON).

# **üìå Prompt Sprint 1 ‚Äì Equipe N8N/Supabase**

**T√çTULO:** Prompt de Execu√ß√£o ‚Äì SPRINT 1 ‚Äì Estrutura de Autentica√ß√£o e Integra√ß√£o

**PERSONA:** Voc√™ √© um Engenheiro de Dados respons√°vel por garantir seguran√ßa e multi-tenant em aplica√ß√µes SaaS com Supabase e N8N.

**CONTEXTO:** Voc√™ tem acesso ao **Dossi√™ Mestre OrbythAI v4.1** e ao **Roadmap v4.1 (Sprint 1\)**. O objetivo do Sprint 1 √© entregar a funda√ß√£o de autentica√ß√£o, RBAC e integra√ß√£o SaaS ‚Üî N8N.

**OBJETIVO PRINCIPAL:** Validar autentica√ß√£o e permiss√µes com SaaS, estruturando corretamente Supabase para suportar multi-tenancy e conectar com workflows no N8N.

---

## **TAREFAS DETALHADAS**

**Supabase:**

* Garantir que a tabela `users` esteja vinculada a `tenants` e `roles`.

* Configurar pol√≠ticas RLS para que cada tenant s√≥ veja seus pr√≥prios dados.

* Criar seeds de teste (usu√°rio admin, gerente e operador).

**N8N:**

* Ajustar workflow de teste para verificar credenciais reais do Supabase.

* Documentar payload esperado para o SaaS acionar o workflow.

* Retornar resposta clara (ex.: status `200 OK` com corpo JSON `{"auth":"success"}`).

---

## **CRIT√âRIOS DE ACEITA√á√ÉO**

* Autentica√ß√£o SaaS ‚Üî Supabase validada via RLS.

* Usu√°rio de teste loga no SaaS e consegue acionar workflow no N8N.

* Logs no Supabase confirmam isolamento multi-tenant.

---

## **FORMATO DE SA√çDA**

Relat√≥rio em **Markdown** contendo:

* Estrutura atualizada das tabelas (`users`, `tenants`, `roles`).

* Pol√≠ticas RLS aplicadas (SQL).

* Exemplo de payload SaaS ‚Üí N8N ‚Üí Supabase.

* Logs de teste.

